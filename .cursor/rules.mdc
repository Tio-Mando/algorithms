# Reglas Globales del Proyecto de Algoritmos

## 游꿢 Prop칩sito
Este repositorio est치 dise침ado para proporcionar ejercicios de algoritmos estructurados por niveles de dificultad para estudiantes de programaci칩n.

## 游늶 Estructura de Archivos
Cada ejercicio debe seguir la estructura est치ndar:
- `README.md` - Enunciado claro con ejemplos
- `exercise.js` - Template con estructura base
- `exercise.test.js` - Tests con casos b치sicos y edge cases
- `hints.md` - Pistas progresivas (opcional)

## 游댢 Est치ndares de C칩digo
- **Idioma**: JavaScript (ES6+)
- **Testing**: Jest framework
- **Formato**: Prettier + ESLint
- **Documentaci칩n**: Markdown con ejemplos claros

## 游닄 Niveles de Dificultad
- **Beginner**: Fundamentos y conceptos b치sicos
- **Intermediate**: Algoritmos cl치sicos y estructuras de datos
- **Advanced**: Problemas complejos y optimizaci칩n
- **Expert**: Desaf칤os extremos y algoritmos avanzados

## 游뛂 Reglas Importantes
1. **NO** incluir soluciones en los ejercicios - usar carpeta `solutions/` separada
2. **S칈** incluir tests comprehensivos con casos edge
3. **S칈** proporcionar ejemplos claros en el README
4. **S칈** usar nomenclatura descriptiva y comentarios 칰tiles

## 游꿉 Enfoque Pedag칩gico
- Progresi칩n gradual de dificultad
- Ejemplos pr치cticos y casos reales
- Pistas que gu칤en sin dar la soluci칩n
- Tests que validen la comprensi칩n